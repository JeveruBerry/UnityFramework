

2019/8/10

public ulong HashCode { get { return Name.GetHashCode(); } }

msgdispatcher

2019/8/12


svn: E170013: Unable to connect to a repository at URL 'https://github.com/xieliujian/UnityFramework.git'
svn: E670008: nodename nor servname provided, or not known
macbook 暂时换回自动ip, 解决问题

flatbuffers_vs_proj

大世界
Floating Point Fix system 浮点修正系统

原生环境开发可能石像开发阶段暴露出问题

HttpWebRequest
HttpWebResponse

LogCategory
    GameLogic


------------------------------------8/25----------------------------------

public override void SendFBMsg(ulong msgid, FlatBufferBuilder builder)
{
    byte[] bytearray = builder.DataBuffer.ToSizedArray();

    gtmInterface.ByteBuffer buff = new gtmInterface.ByteBuffer();
    UInt16 lengh = (UInt16)(bytearray.Length + sizeof(ulong));
    UInt16 biglen = Converter.GetBigEndian(lengh);
    buff.WriteShort(biglen);
    buff.WriteUlong(msgid);
    buff.WriteBytes(bytearray);

    if (NetManager.instance != null)
    {
        NetManager.instance.SendMessage(buff);
    }
}

byte[] bytearray = builder.DataBuffer.ToSizedArray();	这个函数最好去掉，直接把flatbuffer的二进制数据写入发送buff中

--------------------------------------------------------------------------











------------------------------------8/30----------------------------------

xLua抛出异常	try to dispose a LuaEnv with C# callback!

解决方案 https://www.bbsmax.com/A/n2d9MjYvdD/

--------------------------------------------------------------------------







------------------------------------8/31----------------------------------

[CSharpCallLua]
public static List<Type> CSharpCallLua
{
    get
    {
        List<Type> typelist = new List<Type>()
        {
            typeof(Action),

            // 
            typeof(Action<ulong, byte[]>),
        };

        return typelist;
    }
}

CSharpCallLua 可以生成Action代理的泛型方法吗, 代理类型需要一个一个手动添加

--------------------------------------------------------------------------








------------------------------------8/31----------------------------------

// 这个是从flatbuffer里面复制一份数据出来
//byte[] bytearray = builder.DataBuffer.ToSizedArray();

//gtmInterface.ByteBuffer buff = new gtmInterface.ByteBuffer();
//UInt16 lengh = (UInt16)(bytearray.Length + sizeof(ulong));
//UInt16 biglen = Converter.GetBigEndian(lengh);
//buff.WriteShort(biglen);
//buff.WriteUlong(msgid);
//buff.WriteBytes(bytearray);


// 这里做了优化处理，不从flatbuffer里面复制一份数据出来， 而是直接取数据, 减少一次拷贝
int msgpos = builder.DataBuffer.Position;
int msglen = builder.DataBuffer.Length - builder.DataBuffer.Position;

gtmInterface.ByteBuffer buff = new gtmInterface.ByteBuffer();
UInt16 lengh = (UInt16)(msglen + sizeof(ulong));
UInt16 biglen = Converter.GetBigEndian(lengh);
buff.WriteShort(biglen);
buff.WriteUlong(msgid);
buff.WriteBytes(builder.DataBuffer.RawBuffer, msgpos, msglen);

if (NetManager.instance != null)
{
    NetManager.instance.SendMessage(buff);
}

--------------------------------------------------------------------------








------------------------------------8/31----------------------------------

lua builder.lua 没有clear()函数，每次发送消息都要new一个新的出来，频繁的创建释放会有很多gc

--------------------------------------------------------------------------