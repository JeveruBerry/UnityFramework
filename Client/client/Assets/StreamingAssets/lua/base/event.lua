---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xieliujian.
--- DateTime: 2019/9/7 9:58
---

require "base.luaclass"

---@class event
local event = luaclass()

function event.__call(self, ...)
    if self.calling then
        return
    end

    self.calling = true

    if self.funlist then
        for k, v in ipairs(self.funlist) do
            local val = ...
            v(self, ...)
        end
    end

    self.calling = false

    if self.tempaddfunlist then
        for k, v in ipairs(self.tempaddfunlist) do
            self:AddHandler(v)
        end

        self.tempaddfunlist = nil
    end

    if self.temppremovefunlist then
        for k, v in ipairs(self.tempaddfunlist) do
            self:RemoveHandler(v)
        end

        self.temppremovefunlist = nil
    end
end

function event:AddHandler(fun, noassert)
    self.funlist = self.funlist or {}

    for k, v in ipairs(self.funlist) do
        if v == fun then
            assert(noassert, "handler existing!")
            return
        end
    end

    if self.calling then
        self.tempaddfunlist = self.tempaddfunlist or {}

        for k, v in ipairs(self.tempaddfunlist) do
            if v == fun then
                assert(noassert, "handler existing!")
                return
            end
        end

        table.insert(self.tempaddfunlist, fun)
    else
        table.insert(self.funlist, fun)
    end

    return fun
end

function event:RemoveHandler(fun)
    if not fun then
        return
    end

    if self.calling then
        self.temppremovefunlist = self.temppremovefunlist or {}

        table.insert(self.temppremovefunlist, fun)
    elseif self.funlist then
        for k, v in ipairs(self.funlist) do
            if v == fun then
                table.remove(self.funlist, k)
                break
            end
        end
    end
end

function event:Clear(...)
    self.funlist = nil
end

return event



