-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: fbs

local flatbuffers = require('3rd.flatbuffers')

---@class LoginZoneList
local LoginZoneList = {} -- the module

local LoginZoneList_mt = {} -- the class metatable

LoginZoneList.HashID = 0x9B7B303F0247713A;

function LoginZoneList.New()
    local o = {}
    setmetatable(o, {__index = LoginZoneList_mt})
    return o
end

function LoginZoneList.GetRootAsLoginZoneList(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = LoginZoneList.New()
    o:Init(buf, n + offset)
    return o
end

function LoginZoneList.init(buf, offset)
    return LoginZoneList.GetRootAsLoginZoneList(buf, offset)
end

function LoginZoneList_mt:
Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end

function LoginZoneList_mt:Id()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Uint16, o + self.view.pos)
    end
    return 0
end

function LoginZoneList_mt:Name()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end

function LoginZoneList_mt:Ip()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end

function LoginZoneList_mt:Port()
    local o = self.view:Offset(10)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end

function LoginZoneList.Start(builder) builder:StartObject(4) end
function LoginZoneList.AddId(builder, id) builder:PrependUint16Slot(0, id, 0) end
function LoginZoneList.AddName(builder, name) builder:PrependUOffsetTRelativeSlot(1, name, 0) end
function LoginZoneList.AddIp(builder, ip) builder:PrependUOffsetTRelativeSlot(2, ip, 0) end
function LoginZoneList.AddPort(builder, port) builder:PrependUOffsetTRelativeSlot(3, port, 0) end
function LoginZoneList.End(builder) return builder:EndObject() end

return LoginZoneList -- return the module