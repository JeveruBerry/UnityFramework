// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace fbs
{

using global::System;
using global::FlatBuffers;

public struct RspLoginZoneList : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public const ulong HashID = 0xEBDDB73615309BE9;
  public static RspLoginZoneList GetRootAsRspLoginZoneList(ByteBuffer _bb) { return GetRootAsRspLoginZoneList(_bb, new RspLoginZoneList()); }
  public static RspLoginZoneList GetRootAsRspLoginZoneList(ByteBuffer _bb, RspLoginZoneList obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public RspLoginZoneList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public LoginZoneList? Zonelist(int j) { int o = __p.__offset(4); return o != 0 ? (LoginZoneList?)(new LoginZoneList()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ZonelistLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<RspLoginZoneList> CreateRspLoginZoneList(FlatBufferBuilder builder,
      VectorOffset zonelistOffset = default(VectorOffset)) {
    builder.StartObject(1);
    RspLoginZoneList.AddZonelist(builder, zonelistOffset);
    return RspLoginZoneList.EndRspLoginZoneList(builder);
  }

  public static void StartRspLoginZoneList(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddZonelist(FlatBufferBuilder builder, VectorOffset zonelistOffset) { builder.AddOffset(0, zonelistOffset.Value, 0); }
  public static VectorOffset CreateZonelistVector(FlatBufferBuilder builder, Offset<LoginZoneList>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateZonelistVectorBlock(FlatBufferBuilder builder, Offset<LoginZoneList>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartZonelistVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<RspLoginZoneList> EndRspLoginZoneList(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RspLoginZoneList>(o);
  }
};


}
